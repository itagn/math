const { MAX, MIN, intAdd, intSub, floatAdd, floatSub } = require('./calc')

console.log(MAX)  // 9007199254740991
console.log(MIN)  // -9007199254740991

console.log('----------整数加法----------')
intAdd(MAX, 2)  // '9007199254740993'
intAdd(MAX, 10 ** 16)  // '19007199254740991'

// 提示信息的计算
// 警告：由于存在科学计数法，计算结果不一定准确，请转化成字符串后计算
intAdd(MAX, 10 ** 21)  // '1000009007199254740991'
// 警告：由于存在科学计数法，计算结果不一定准确，请转化成字符串后计算
intAdd(MAX, 10 ** 21 + 2)  // '1000009007199254740991'
// 警告：由于存在科学计数法，计算结果不一定准确，请转化成字符串后计算
intAdd(MAX, `-${10 ** 21}`)  // '-999990992800745259009'

intAdd(MAX, NaN) // 报错：参数中不应该存在 NaN
intAdd(MAX, {}) // 报错：参数中存在非法的数据，数据类型只支持 number 和 string

// 大数计算
intAdd('9037499254750994', '-9007299251310995')  // '30200003439999'
intAdd('8107499231750996', '-9007299254310995')  // '-899800022559999'
intAdd('-9907492547350994', '9007399254750995')  // '-900093292599999'
intAdd('9997492547350994', '9997399254750995')  // '19994891802101989'
intAdd('-9997492547350994', '-9997399254750995')  // '-19994891802101989'
intAdd('-4707494254750996000004254750996', '9707494254750996007299232150995')  // '5000000000000000007294977399999'
intAdd('-4707494254750996900004254750996', '9707494254750996007299232150995')  // '4999999999999999107294977399999'
console.log('--------------------\n')

console.log('----------整数减法----------')
intSub('9037499254750994', '-9007299251310995')  // '18044798506061989'
intSub('8107499231750996', '-9007299254310995')  // '17114798486061991'
intSub('-9907492547350994', '9007399254750995')  // '-18914891802101989'
intSub('9997492547350994', '9997399254750995')  // '93292599999'
intSub('-4707494254750996000004254750996', '9707494254750996007299232150995')  // '-14414988509501992007303486901991'
intSub('-4707494254750996900004254750996', '9707494254750996007299232150995')  // '-14414988509501992907303486901991'
console.log('--------------------\n')

console.log('----------小数加法----------')
floatAdd('0.9037499254750994', '-0.9007299251310995')  // '0.0030200003439999'
floatAdd('0.8107499231750996', '-0.9007299254310995')  // '-0.0899800022559999'
floatAdd('-0.9907492547350994', '0.9007399254750995')  // '-0.0900093292599999'
floatAdd('0.9997492547350994', '0.9997399254750995')  // '1.9994891802101989'
floatAdd('-0.9997492547350994', '-0.9997399254750995')  // '-1.9994891802101989'
floatAdd('-0.4707494254750996000004254750996', '0.9707494254750996007299232150995')  // '0.5000000000000000007294977399999'
floatAdd('-0.4707494254750996900004254750996', '0.9707494254750996007299232150995')  // '0.4999999999999999107294977399999'
console.log('--------------------\n')

console.log('----------小数减法----------')
floatSub('0.9037499254750994', '-0.9007299251310995')  // '1.8044798506061989'
floatSub('0.8107499231750996', '-0.9007299254310995')  // '1.7114798486061991'
floatSub('-0.9907492547350994', '0.9007399254750995')  // '-1.8914891802101989'
floatSub('0.9997492547350994', '0.9997399254750995')  // '0.0000093292599999'
floatSub('-0.9997492547350994', '-0.9997399254750995')  // '-0.0000093292599999'
floatSub('-0.4707494254750996000004254750996', '0.9707494254750996007299232150995')  // '-1.4414988509501992007303486901991'
floatSub('-0.4707494254750996900004254750996', '0.9707494254750996007299232150995')  // '-1.4414988509501992907303486901991'
console.log('--------------------\n')